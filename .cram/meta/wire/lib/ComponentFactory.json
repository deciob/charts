{"absId":"wire/lib/ComponentFactory","url":"/home/decio/dev/personal/nightcharts-gh/bower_components/wire/lib/ComponentFactory.js","source":"/** @license MIT License (c) copyright 2010-2013 original author or authors */\n\n/**\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @author: Brian Cavalier\n * @author: John Hann\n */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar when, object, WireProxy, ObjectProxy, undef;\n\n\twhen = require('when');\n\tobject = require('./object');\n\tWireProxy = require('./WireProxy');\n\tObjectProxy = require('./ObjectProxy');\n\n\tfunction ComponentFactory(lifecycle, plugins, pluginApi) {\n\t\tthis.plugins = plugins;\n\t\tthis.pluginApi = pluginApi;\n\t\tthis.lifecycle = lifecycle;\n\t\tthis.proxies = [];\n\t}\n\n\tComponentFactory.prototype = {\n\n\t\tcreate: function(component) {\n\t\t\tvar found;\n\n\t\t\t// Look for a factory, then use it to create the object\n\t\t\tfound = this.getFactory(component.spec);\n\t\t\treturn found\n\t\t\t\t? this._create(component, found.factory, found.options)\n\t\t\t\t: when.reject(component);\n\t\t},\n\n\t\t_create: function(component, factory, options) {\n\t\t\tvar instance, self;\n\n\t\t\tinstance = when.defer();\n\t\t\tself = this;\n\n\t\t\tfactory(instance.resolver, options,\n\t\t\t\tthis.pluginApi.contextualize(component.id));\n\n\t\t\treturn instance.promise.then(function(instance) {\n\t\t\t\treturn self.processComponent(component, instance);\n\t\t\t});\n\t\t},\n\n\t\tprocessComponent: function(component, instance) {\n\t\t\tvar self, proxy;\n\n\t\t\tself = this;\n\t\t\tproxy = this.createProxy(instance, component);\n\n\t\t\treturn self.initInstance(proxy).then(\n\t\t\t\tfunction(proxy) {\n\t\t\t\t\treturn self.startupInstance(proxy);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\tinitInstance: function(proxy) {\n\t\t\treturn this.lifecycle.init(proxy);\n\t\t},\n\n\t\tstartupInstance: function(proxy) {\n\t\t\treturn this.lifecycle.startup(proxy);\n\t\t},\n\n\t\tcreateProxy: function(instance, component) {\n\t\t\tvar proxy;\n\n\t\t\tif (WireProxy.isProxy(instance)) {\n\t\t\t\tproxy = instance;\n\t\t\t\tinstance = WireProxy.getTarget(proxy);\n\t\t\t} else {\n\t\t\t\tproxy = new ObjectProxy(instance);\n\t\t\t}\n\n\t\t\tproxy = this.initProxy(proxy);\n\n\t\t\tif(component) {\n\t\t\t\tcomponent.proxy = proxy;\n\t\t\t\tproxy.id = component.id;\n\t\t\t\tproxy.metadata = component;\n\t\t\t}\n\n\t\t\tthis._registerProxy(proxy);\n\n\t\t\treturn proxy;\n\t\t},\n\n\t\tinitProxy: function(proxy) {\n\n\t\t\tvar proxiers = this.plugins.proxiers;\n\n\t\t\t// Allow proxy plugins to process/modify the proxy\n\t\t\tproxy = proxiers.reduce(\n\t\t\t\tfunction(proxy, proxier) {\n\t\t\t\t\tvar overridden = proxier(proxy);\n\t\t\t\t\treturn WireProxy.isProxy(overridden) ? overridden : proxy;\n\t\t\t\t},\n\t\t\t\tproxy\n\t\t\t);\n\n\t\t\treturn proxy;\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar proxies, lifecycle;\n\n\t\t\tproxies = this.proxies;\n\t\t\tlifecycle = this.lifecycle;\n\n\t\t\treturn shutdownComponents().then(destroyComponents);\n\n\t\t\tfunction shutdownComponents() {\n\t\t\t\treturn when.reduce(proxies,\n\t\t\t\t\tfunction(_, proxy) { return lifecycle.shutdown(proxy); },\n\t\t\t\t\tundef);\n\t\t\t}\n\n\t\t\tfunction destroyComponents() {\n\t\t\t\treturn when.reduce(proxies,\n\t\t\t\t\tfunction(_, proxy) { return proxy.destroy(); },\n\t\t\t\t\tundef);\n\t\t\t}\n\t\t},\n\n\t\t_registerProxy: function(proxy) {\n\t\t\tif(proxy.metadata) {\n\t\t\t\tproxy.path = proxy.metadata.path;\n\t\t\t\tthis.proxies.push(proxy);\n\t\t\t}\n\t\t},\n\n\t\tgetFactory: function(spec) {\n\t\t\tvar f, factories, found;\n\n\t\t\tfactories = this.plugins.factories;\n\n\t\t\tfor (f in factories) {\n\t\t\t\tif (object.hasOwn(spec, f)) {\n\t\t\t\t\tfound = {\n\t\t\t\t\t\tfactory: factories[f],\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\toptions: spec[f],\n\t\t\t\t\t\t\tspec: spec\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Intentionally returns undefined if no factory found\n\t\t\treturn found;\n\n\t\t}\n\t};\n\n\treturn ComponentFactory;\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n","modules":[{"pos":267,"count":25,"factory":true,"argList":["require"],"requires":[{"id":"when","pos":354,"count":15},{"id":"./object","pos":381,"count":19},{"id":"./WireProxy","pos":415,"count":22},{"id":"./ObjectProxy","pos":454,"count":24}],"id":"wire/lib/ComponentFactory"}],"compileTime":"2014-03-24T21:53:07.513Z"}