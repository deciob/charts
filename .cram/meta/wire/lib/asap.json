{"absId":"wire/lib/asap","url":"/home/decio/dev/personal/nightcharts-gh/bower_components/wire/lib/asap.js","source":"/** @license MIT License (c) copyright 2011-2013 original author or authors */\n\n/**\n * @author Brian Cavalier\n * @author John Hann\n */\n\n(function (define) { 'use strict';\ndefine(function (require) {\n\n\tvar when = require('when');\n\n\t/**\n\t * WARNING: This is not the function you're looking for. You\n\t * probably want when().\n\t * This function *conditionally* executes onFulfill synchronously\n\t * if promiseOrValue is a non-promise, or calls when(promiseOrValue,\n\t * onFulfill, onReject) otherwise.\n\t * @return {Promise|*} returns a promise if promiseOrValue is\n\t *  a promise, or the return value of calling onFulfill\n\t *  synchronously otherwise.\n\t */\n\treturn function asap(promiseOrValue, onFulfill, onReject) {\n\t\treturn when.isPromise(promiseOrValue)\n\t\t\t? when(promiseOrValue, onFulfill, onReject)\n\t\t\t: onFulfill(promiseOrValue);\n\t};\n\n});\n})(typeof define == 'function' && define.amd ? define : function(factory) { module.exports = factory(require); });\n","modules":[{"pos":171,"count":26,"factory":true,"argList":["require"],"requires":[{"id":"when","pos":212,"count":15}],"id":"wire/lib/asap"}],"compileTime":"2014-03-24T21:53:07.510Z"}