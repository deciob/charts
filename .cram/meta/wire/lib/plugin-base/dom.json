{"absId":"wire/lib/plugin-base/dom","url":"/home/decio/dev/personal/nightcharts-gh/bower_components/wire/lib/plugin-base/dom.js","source":"/** @license MIT License (c) copyright B Cavalier & J Hann */\n\n/**\n * dom plugin helper\n *\n * wire is part of the cujo.js family of libraries (http://cujojs.com/)\n *\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n */\ndefine(['wire/domReady', 'when', '../dom/base', '../object'], function(domReady, when, base, object) {\n\n\tfunction getElementFactory (resolver, componentDef, wire) {\n\t\twhen(wire(componentDef.options), function (element) {\n\n\t\t\tif (!element || !element.nodeType || !element.tagName) {\n\t\t\t\tthrow new Error('dom: non-element reference provided to element factory');\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}).then(resolver.resolve, resolver.reject);\n\t}\n\n\treturn function createDomPlugin(options) {\n\n\t\tvar getById, query, first, addClass, removeClass, placeAt,\n\t\t\tdoById, doPlaceAt, resolveQuery;\n\n\t\tgetById = options.byId || base.byId;\n\t\tquery = options.query || base.querySelectorAll;\n\t\tfirst = options.first || base.querySelector;\n\t\taddClass = options.addClass;\n\t\tplaceAt = options.placeAt || base.placeAt;\n\t\tremoveClass = options.removeClass;\n\n\t\tfunction doByIdImpl(resolver, name) {\n\t\t\tvar node;\n\n\t\t\t// if dev omitted name, they're looking for the resolver itself\n\t\t\tif (!name) {\n\t\t\t\treturn resolver.resolve(getById);\n\t\t\t}\n\n\t\t\tnode = getById(name);\n\t\t\tif (node) {\n\t\t\t\tresolver.resolve(node);\n\t\t\t} else {\n\t\t\t\tresolver.reject(new Error(\"No DOM node with id: \" + name));\n\t\t\t}\n\t\t}\n\n\t\tdoById = function(resolver, name /*, refObj, wire*/) {\n\t\t\tdomReady(function() {\n\t\t\t\tdoById = doByIdImpl;\n\t\t\t\tdoByIdImpl(resolver, name);\n\t\t\t});\n\t\t};\n\n\t\tfunction doQuery(name, refObj, root, queryFunc) {\n\t\t\tvar result, i;\n\n\t\t\tresult = queryFunc(name, root);\n\n\t\t\t// if dev supplied i, try to use it\n\t\t\tif (typeof refObj.i != 'undefined') {\n\t\t\t\ti = refObj.i;\n\t\t\t\tif (result[i]) { // do not use `i in result` since IE gives a false positive\n\t\t\t\t\treturn result[i];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Query '\" + name + \"' did not find an item at position \" + i);\n\t\t\t\t}\n\t\t\t} else if (queryFunc == first && !result) {\n\t\t\t\tthrow new Error(\"Query '\" + name + \"' did not find anything\");\n\t\t\t} else {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tfunction doPlaceAtImpl(resolver, facet, wire) {\n\t\t\tvar futureRefNode, node, options, operation;\n\n\t\t\toptions = facet.options;\n\t\t\tnode = facet.target;\n\n\t\t\t// get first property and use it as the operation\n\t\t\tfor (var p in options) {\n\t\t\t\tif (object.hasOwn(options, p)) {\n\t\t\t\t\toperation = p;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfutureRefNode = wire(makeQueryRef(options[operation]));\n\n\t\t\twhen(futureRefNode, function (refNode) {\n\t\t\t\treturn placeAt(node, refNode, operation);\n\t\t\t}).then(resolver.resolve, resolver.reject);\n\t\t}\n\n\t\tdoPlaceAt = function(resolver, facet, wire) {\n\t\t\tdomReady(function() {\n\t\t\t\tdoPlaceAt = doPlaceAtImpl;\n\t\t\t\tdoPlaceAtImpl(resolver, facet, wire);\n\t\t\t});\n\t\t};\n\n\t\tfunction resolveQueryImpl(resolver, name, refObj, wire, queryFunc) {\n\t\t\tvar futureRoot;\n\n\t\t\tif (!queryFunc) {\n\t\t\t\tqueryFunc = query;\n\t\t\t}\n\n\t\t\t// if dev omitted name, they're looking for the resolver itself\n\t\t\tif (!name) {\n\t\t\t\treturn resolver.resolve(queryFunc);\n\t\t\t}\n\n\t\t\t// get string ref or object ref\n\t\t\tif (refObj.at && !refObj.isRoot) {\n\t\t\t\tfutureRoot = wire(makeQueryRoot(refObj.at));\n\t\t\t}\n\n\t\t\t// sizzle will default to document if refObj.at is unspecified\n\t\t\twhen(futureRoot, function (root) {\n\t\t\t\treturn doQuery(name, refObj, root, queryFunc);\n\t\t\t}).then(resolver.resolve, resolver.reject);\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param resolver {Resolver} resolver to notify when the ref has been resolved\n\t\t * @param name {String} the dom query\n\t\t * @param refObj {Object} the full reference object, including options\n\t\t * @param wire {Function} wire()\n\t\t * @param [queryFunc] {Function} the function to use to query the dom\n\t\t */\n\t\tresolveQuery = function(resolver, name, refObj, wire, queryFunc) {\n\n\t\t\tdomReady(function() {\n\t\t\t\tresolveQuery = resolveQueryImpl;\n\t\t\t\tresolveQueryImpl(resolver, name, refObj, wire, queryFunc);\n\t\t\t});\n\n\t\t};\n\n\t\t/**\n\t\t * dom.first! resolver.\n\t\t *\n\t\t * @param resolver {Resolver} resolver to notify when the ref has been resolved\n\t\t * @param name {String} the dom query\n\t\t * @param refObj {Object} the full reference object, including options\n\t\t * @param wire {Function} wire()\n\t\t */\n\t\tfunction resolveFirst(resolver, name, refObj, wire) {\n\t\t\tresolveQuery(resolver, name, refObj, wire, first);\n\t\t}\n\n\t\tfunction makeQueryRoot(ref) {\n\n\t\t\tvar root = makeQueryRef(ref);\n\n\t\t\tif(root) {\n\t\t\t\troot.isRoot = true;\n\t\t\t}\n\n\t\t\treturn root;\n\t\t}\n\n\t\tfunction makeQueryRef(ref) {\n\t\t\treturn typeof ref == 'string' ? { $ref: ref } : ref;\n\t\t}\n\n\t\tfunction createResolver(resolverFunc, options) {\n\t\t\treturn function(resolver, name, refObj, wire) {\n\t\t\t\tif(!refObj.at) {\n\t\t\t\t\trefObj.at = options.at;\n\t\t\t\t} else {\n\t\t\t\t\trefObj.at = makeQueryRoot(refObj.at);\n\t\t\t\t}\n\n\t\t\t\treturn resolverFunc(resolver, name, refObj, wire);\n\t\t\t};\n\t\t}\n\n\t\tfunction handleClasses(node, add, remove) {\n\t\t\tif(add) {\n\t\t\t\taddClass(node, add);\n\t\t\t}\n\n\t\t\tif(remove) {\n\t\t\t\tremoveClass(node, remove);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * DOM plugin factory\n\t\t */\n\t\treturn function(options) {\n\t\t\tvar classes, resolvers, facets, factories, context, htmlElement;\n\n\t\t\toptions.at = makeQueryRoot(options.at);\n\t\t\tclasses = options.classes;\n\t\t\tcontext = {};\n\n\t\t\tif(classes) {\n\t\t\t\tdomReady(function() {\n\t\t\t\t\thtmlElement = document.getElementsByTagName('html')[0];\n\t\t\t\t});\n\n\t\t\t\tcontext.initialize = function (resolver) {\n\t\t\t\t\tdomReady(function () {\n\t\t\t\t\t\thandleClasses(htmlElement, classes.init);\n\t\t\t\t\t\tresolver.resolve();\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tcontext.ready = function (resolver) {\n\t\t\t\t\tdomReady(function () {\n\t\t\t\t\t\thandleClasses(htmlElement, classes.ready, classes.init);\n\t\t\t\t\t\tresolver.resolve();\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tif(classes.ready) {\n\t\t\t\t\tcontext.destroy = function (resolver) {\n\t\t\t\t\t\tdomReady(function () {\n\t\t\t\t\t\t\thandleClasses(htmlElement, null, classes.ready);\n\t\t\t\t\t\t\tresolver.resolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfactories = {\n\t\t\t\telement: getElementFactory\n\t\t\t};\n\n\t\t\tfacets = {\n\t\t\t\tinsert: {\n\t\t\t\t\tinitialize: doPlaceAt\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tresolvers = {};\n\t\t\t// id and dom are synonyms\n\t\t\t// dom is deprecated and for backward compat only\n\t\t\tresolvers.id = resolvers.dom = doById;\n\n\t\t\tif (query) {\n\t\t\t\t// dom.first is deprecated\n\t\t\t\tresolvers.first = createResolver(resolveFirst, options);\n\t\t\t\tresolvers['dom.first'] = function() {\n\t\t\t\t\t// TODO: Deprecation warning\n\t\t\t\t\tresolvers.first.apply(resolvers, arguments);\n\t\t\t\t};\n\n\t\t\t\t// all and query are synonyms\n\t\t\t\tresolvers.all = resolvers.query = createResolver(resolveQuery, options);\n\t\t\t\tresolvers['dom.all'] = resolvers['dom.query'] = function() {\n\t\t\t\t\t// TODO: Deprecation warning\n\t\t\t\t\tresolvers.query.apply(resolvers, arguments);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcontext: context,\n\t\t\t\tresolvers: resolvers,\n\t\t\t\tfacets: facets,\n\t\t\t\tfactories: factories,\n\t\t\t\tproxies: [\n\t\t\t\t\tbase.proxyNode\n\t\t\t\t]\n\t\t\t};\n\n\t\t};\n\t};\n});\n","modules":[{"pos":262,"count":101,"depList":["wire/domReady","when/when","wire/lib/dom/base","wire/lib/object"],"factory":true,"argList":["domReady","when","base","object"],"id":"wire/lib/plugin-base/dom"}],"compileTime":"2014-03-24T21:53:07.511Z"}