{"absId":"wire/lib/plugin/registry","url":"/home/decio/dev/personal/nightcharts-gh/bower_components/wire/lib/plugin/registry.js","source":"/** @license MIT License (c) copyright B Cavalier & J Hann */\n\n/**\n * plugins\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n * @author: brian@hovercraftstudios.com\n */\n(function(define) {\ndefine(function(require) {\n\n\tvar when, array, object, priority, instantiate, nsKey, nsSeparator;\n\n\twhen = require('when');\n\tarray = require('../array');\n\tobject = require('../object');\n\tpriority = require('./priority');\n\tinstantiate = require('../instantiate');\n\n\tnsKey = '$ns';\n\tnsSeparator = ':';\n\n\tfunction PluginRegistry() {\n\t\tthis.plugins = [];\n\t\tthis._namespaces = {};\n\n\t\tthis.contextListeners = [];\n\t\tthis.listeners = [];\n\t\tthis.proxiers =  [];\n\t\tthis.resolvers = {};\n\t\tthis.factories = {};\n\t\tthis.facets =    {};\n\t}\n\n\tPluginRegistry.prototype = {\n\t\tscanModule: function (module, spec, namespace) {\n\t\t\tvar self, pluginFactory;\n\n\t\t\tpluginFactory = discoverPlugin(module);\n\n\t\t\tif (!allowPlugin(pluginFactory, this.plugins)) {\n\t\t\t\treturn when.resolve();\n\t\t\t}\n\n\t\t\t// Add to singleton plugins list to only allow one instance\n\t\t\t// of this plugin in the current context.\n\t\t\tthis.plugins.push(pluginFactory);\n\n\t\t\t// Initialize the plugin for this context\n\t\t\tself = this;\n\t\t\treturn when(instantiate(pluginFactory, [spec]),\n\t\t\t\tfunction (plugin) {\n\t\t\t\t\tplugin && self.registerPlugin(plugin, namespace || getNamespace(spec));\n\t\t\t\t}\n\t\t\t).yield();\n\t\t},\n\n\t\tregisterPlugin: function (plugin, namespace) {\n\t\t\taddNamespace(namespace, this._namespaces);\n\n\t\t\taddPlugin(plugin.resolvers, this.resolvers, namespace);\n\t\t\taddPlugin(plugin.factories, this.factories, namespace);\n\t\t\taddPlugin(plugin.facets, this.facets, namespace);\n\n\t\t\tthis.listeners.push(plugin);\n\t\t\tif(plugin.context) {\n\t\t\t\tthis.contextListeners.push(plugin.context);\n\t\t\t}\n\n\t\t\tthis._registerProxies(plugin.proxies);\n\t\t},\n\n\t\t_registerProxies: function (proxiesToAdd) {\n\t\t\tif (!proxiesToAdd) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.proxiers = priority.sortReverse(array.union(this.proxiers, proxiesToAdd));\n\t\t}\n\t};\n\n\treturn PluginRegistry;\n\n\tfunction discoverPlugin(module) {\n\t\tvar plugin;\n\n\t\t// Prefer deprecated legacy wire$plugin format over newer\n\t\t// plain function format.\n\t\t// TODO: Remove support for wire$plugin\n\t\tif(typeof module.wire$plugin === 'function') {\n\t\t\tplugin = module.wire$plugin;\n\t\t} else if(typeof module === 'function') {\n\t\t\tplugin = module;\n\t\t}\n\n\t\treturn plugin;\n\t}\n\n\tfunction getNamespace(spec) {\n\t\tvar namespace;\n\t\tif(typeof spec === 'object' && nsKey in spec) {\n\t\t\t// A namespace was provided\n\t\t\tnamespace = spec[nsKey];\n\t\t}\n\n\t\treturn namespace;\n\t}\n\n\tfunction addNamespace(namespace, namespaces) {\n\t\tif(namespace && namespace in namespaces) {\n\t\t\tthrow new Error('plugin namespace already in use: ' + namespace);\n\t\t} else {\n\t\t\tnamespaces[namespace] = 1;\n\t\t}\n\t}\n\n\tfunction allowPlugin(plugin, existing) {\n\t\treturn typeof plugin === 'function' && existing.indexOf(plugin) === -1;\n\t}\n\n\tfunction addPlugin(src, registry, namespace) {\n\t\tvar newPluginName, namespacedName;\n\t\tfor (newPluginName in src) {\n\t\t\tnamespacedName = makeNamespace(newPluginName, namespace);\n\t\t\tif (object.hasOwn(registry, namespacedName)) {\n\t\t\t\tthrow new Error(\"Two plugins for same type in scope: \" + namespacedName);\n\t\t\t}\n\n\t\t\tregistry[namespacedName] = src[newPluginName];\n\t\t}\n\t}\n\n\tfunction makeNamespace(pluginName, namespace) {\n\t\treturn namespace ? (namespace + nsSeparator + pluginName) : pluginName;\n\t}\n});\n}(typeof define === 'function' ? define : function(factory) { module.exports = factory(require); }));\n","modules":[{"pos":234,"count":25,"factory":true,"argList":["require"],"requires":[{"id":"when","pos":340,"count":15},{"id":"../array","pos":366,"count":19},{"id":"../object","pos":397,"count":20},{"id":"./priority","pos":431,"count":21},{"id":"../instantiate","pos":469,"count":25}],"id":"wire/lib/plugin/registry"}],"compileTime":"2014-03-24T21:53:07.504Z"}