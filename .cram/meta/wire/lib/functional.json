{"absId":"wire/lib/functional","url":"/home/decio/dev/personal/nightcharts-gh/bower_components/wire/lib/functional.js","source":"/** @license MIT License (c) copyright B Cavalier & J Hann */\n\n/**\n * functional\n * Helper library for working with pure functions in wire and wire plugins\n *\n * NOTE: This lib assumes Function.prototype.bind is available\n *\n * wire is part of the cujo.js family of libraries (http://cujojs.com/)\n *\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n */\n(function (define) { 'use strict';\ndefine(function (require) {\n\n\tvar asap, slice;\n\n\tasap = require('./asap');\n\tslice = [].slice;\n\n\t/**\n\t * Create a partial function\n\t * @param f {Function}\n\t * @param [args] {*} additional arguments will be bound to the returned partial\n\t * @return {Function}\n\t */\n\tfunction partial(f, args/*...*/) {\n\t\t// Optimization: return f if no args provided\n\t\tif(arguments.length == 1) {\n\t\t\treturn f;\n\t\t}\n\n\t\targs = slice.call(arguments, 1);\n\n\t\treturn function() {\n\t\t\treturn f.apply(this, args.concat(slice.call(arguments)));\n\t\t};\n\t}\n\n\t/**\n\t * Promise-aware function composition. If any function in\n\t * the composition returns a promise, the entire composition\n\t * will be lifted to return a promise.\n\t * @param funcs {Array} array of functions to compose\n\t * @return {Function} composed function\n\t */\n\tfunction compose(funcs) {\n\t\tvar first;\n\n\t\tfirst = funcs[0];\n\t\tfuncs = funcs.slice(1);\n\n\t\treturn function composed() {\n\t\t\tvar context = this;\n\t\t\treturn funcs.reduce(function(result, f) {\n\t\t\t\treturn asap(result, function(result) {\n\t\t\t\t\treturn f.call(context, result);\n\t\t\t\t});\n\t\t\t}, first.apply(this, arguments));\n\t\t};\n\t}\n\n\treturn {\n\t\tcompose: compose,\n\t\tpartial: partial\n\t};\n\n});\n})(typeof define == 'function'\n\t// AMD\n\t? define\n\t// CommonJS\n\t: function(factory) { module.exports = factory(require); }\n);\n","modules":[{"pos":431,"count":26,"factory":true,"argList":["require"],"requires":[{"id":"./asap","pos":487,"count":17}],"id":"wire/lib/functional"}],"compileTime":"2014-03-24T21:53:07.512Z"}